import gg.jte.ContentType
import java.nio.file.Paths
import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'gg.jte.gradle' version '2.3.1-SNAPSHOT'
    id 'org.graalvm.buildtools.native' version '0.9.20'
}

repositories {
    mavenCentral()
    mavenLocal()
}

group = 'gg.jte.testgroup'

test {
    useJUnitPlatform()
}

dependencies {
    implementation('gg.jte:jte-runtime:2.3.1-SNAPSHOT')
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testImplementation('org.assertj:assertj-core:3.23.1')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    implementation 'info.picocli:picocli:4.6.1'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'

}

tasks.generateJte {
    sourceDirectory = Paths.get(project.projectDir.absolutePath, "src", "main", "jte")
    contentType = gg.jte.ContentType.Html
    generateNativeImageResources = true
}

sourceSets.main.java.srcDir(tasks.generateJte.targetDirectory)
sourceSets.main.resources.srcDir(tasks.generateJte.targetResourceDirectory)

tasks.compileJava {
    dependsOn(tasks.generateJte)
}

graalvmNative {
    toolchainDetection = false
    binaries {
        main {
            mainClass = 'test.NativeTestApp'
        }
    }
}
